transport select swd
adapter speed 100

# Create a new dap, with name chip and role CPU, -enable let's OpenOCD to know to add it to the scan
swd newdap chip cpu -enable

# Create the DAP instance, this must be explicitly created according to the OpenOCD docs
dap create chip.dap -chain-position chip.cpu

# Set up the GDB target for the CPU, cortex_m is the CPU type, 
target create chip.cpu cortex_m -dap chip.dap

flash bank myFlash stm32f1x 0 0 0 0 chip.cpu


# init reads out all of the necessary information from the DAP, kicks off the debugging session, etc
init

# Read out the information from the DAP, including the ROM table
dap info

reset halt


proc clear_flash_sector {sector_number} {
    write_memory 0x4006F000 32 {0x09} ;#set erasing mode
    write_memory 0x4006F004 32 [expr {$sector_number << 7}]
    write_memory 0x4006F01c 32 {0xAA} ;#unlock flash
    write_memory 0x4006F010 32 {0x01} ;#set OPSTART=1
    read_memory 0x4006F014 32 1 ;#check status
    write_memory 0x4006F018 32 {0x55} ;#lock flash
}